Chat Mutex - Participants can send messages only subsequently. If Bob 
currently holds the mutex, Alice cant send anything. However, she can ask
Bob for the mutex (button). If bob does not explicitly declines, Alice gets
the mutex.

Drag &n Drop support for file transactions

Configurable key bindings, which produce all kinds of actions, such as 
entering predefined phrases in the window.
 
Chatroom Namespaces:
The chatroom space of a server is grouped into a hierarchical structure.
Each room can have other rooms but still can be used for communications.
A server can "mount" another server under a location in the hierarchy.
 
File Transfer facilities


Command and message history - accessible with PageUp/PageDown.
Implementation:
Maintain queue with messages, add new messages (OnEnter), remove if
size is too big (number of messages? size variable?)
When typing message and hitting PageUp, message is also appended to the 
queue.

GUI- Additions:
"Connection" Menu: 
 - Connect -> Dialog (Server, port)
 - Disconnect
"File" Menu: Quit
"Help": About...


User Identification:
User identifies not by classical "username/password", but by "private/public"
keypair. 
Problem: On webs of servers it is difficult to address users on a different
servers, because the adresses assigned might not be unique. A username@server
approach is not feasible, because users would start to depend on the single
server they are registered in, and that is not what we want.
A keypair is more secure than username/password when handled properly, 
but the primary advantage is that on webs of servers a more or less unique
identification is provided. Also this approach allows proper authentication and
encryption of endpoints between each other.

German text I wrote to explain the idea of nuke-ms:
Es gibt Systeme aus mehreren Teilnehmern, die sich selbst regulieren. Jedes
einzelne Mitglied handelt für sich, es handelt ohne Sinn für "die Gesellschaft"
- man könnte fast sagen egoistisch. Und doch führt das Zusammenspiel dieser
  Egoisten zu einem funktionierenden System. Hält ein Mitglied sich nicht an
die Regeln, fliegt er raus. Ich glaube daran (und wenn ich nicht daran glauben
würde, könnte ich gleich aufhören) dass es möglich ist ein solches System zu
erschaffen. Das Protokoll, die Regeln müssten so ausgelegt und Ausbalanciert
werden, dass ein Systemzusammenbruch zwar möglich ist (das kann ich nun wirklich
nicht verhindern), allerdings sehr schwierig. Einen Systemzusammenbruch darf es
nicht wegen einzelnen Individuen geben sondern nur dann wenn ein großer Teil des
Netzwerkes sich nicht an die Regeln hält.

