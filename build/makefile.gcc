PROJECT_ROOT := ../..

# include configuration file
include $(PROJECT_ROOT)/build/config.gcc

DEPFILE := $(PROJECT_ROOT)/build/dependencies.gcc
DOXYFILE := $(PROJECT_ROOT)/doc/Doxyfile
DOCDIR := $(PROJECT_ROOT)/doc/html


# compose all boost libraries used
B_LIB_SYSTEM := $(BOOST_PREFIX)boost_system$(BOOST_SUFFIX)
B_LIB_THREAD := $(BOOST_PREFIX)boost_thread$(BOOST_SUFFIX)


CXXFLAGS += $(WX_FLAGS) $(WARNFLAGS) -I$(PWD) -I$(PROJECT_ROOT)/src/common  $(INCLUDEDIRS)
	    
LIBS :=  -l$(B_LIB_THREAD) -l$(B_LIB_SYSTEM) $(WX_LIBS)



# the list of the components of the application
COMPONENTS := gui protocol control
COMMONDIR := $(PROJECT_ROOT)/src/common


# create a variable that contains all source files
# first expand the wildcard in the working directory
SOURCES := $(wildcard *.cpp)

# add the common files to the sources
SOURCES += $(wildcard $(COMMONDIR)/*.cpp)

# then expand the wildcards in the components directories
SOURCES += $(foreach comp,$(COMPONENTS),$(wildcard $(comp)/*.cpp))
# finally create the names for the object file
OBJECTS := $(patsubst %.cpp,%.o,$(SOURCES))



all: nms

doc:
	$(DOCGEN) $(DOXYFILE)


# include header dependencies file
include $(DEPFILE)

$(DEPFILE):
	$(CXX) -I$(PWD) -I$(PROJECT_ROOT)/src/common -MM $(SOURCES) > $@


nms: $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(LIBDIRS) -o $@ $^ $(LIBS)

clean:
	$(RM) nms $(OBJECTS) $(DEPFILE)

doc_clean:
	$(RMDIR) $(DOCDIR)
